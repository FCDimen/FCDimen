import pytest
import numpy as np
from ase import Atoms

from fcdimen.functions.score import calc_score, scanner

fc = np.array([[[[4.68412761e-310, 5.98149210e-154, 1.95066223e-153],
   [2.21208742e+214, 6.01334510e-154, 7.00702602e-077],
   [7.66630058e+170, 5.98149228e-154, 1.19894383e+285]],
  [[7.84875893e-085, 6.47518981e+170, 1.47625723e-028],
   [1.18600496e-259, 1.41767483e+190, 2.20891822e-094],
   [6.01354999e-154, 3.81187276e+180, 3.14205912e-120]]],
 [[[0.00000000e+000, 6.01354999e-154, 5.40756686e-119],
   [2.47379808e-091, 6.01347033e-154, 6.63832516e-119],
   [5.98194028e-154, 6.01354999e-154, 1.95064181e-153]],
  [[5.98129897e-154, 3.88837734e+160, 1.42226542e+261],
   [2.25563609e-153, 6.42824186e+029, 3.03426177e-086],
   [5.40756686e-119, 1.68075987e-118, 6.41842734e-310]]]])


sc = Atoms(symbols='MoS', pbc=True, cell=[[12.55928036, 0.0, 0.0], [-6.27964016, 10.87665584, 0.0], [0.0, 0.0, 18.68422764]])
nat = 2
Fp2 = np.array([[[[4.68412761e-310, 7.84875893e-085],
   [2.21208742e+214, 1.18600496e-259],
   [7.66630058e+170, 6.01354999e-154]],
  [[0.00000000e+000, 5.98129897e-154],
   [2.47379808e-091, 2.25563609e-153],
   [5.98194028e-154, 5.40756686e-119]]],
 [[[5.98149210e-154, 6.47518981e+170],
   [6.01334510e-154, 1.41767483e+190],
   [5.98149228e-154, 3.81187276e+180]],
  [[6.01354999e-154, 3.88837734e+160],
   [6.01347033e-154, 6.42824186e+029],
   [6.01354999e-154, 1.68075987e-118]]],
 [[[1.95066223e-153, 1.47625723e-028],
   [7.00702602e-077, 2.20891822e-094],
   [1.19894383e+285, 3.14205912e-120]],
  [[5.40756686e-119, 1.42226542e+261],
   [6.63832516e-119, 3.03426177e-086],
   [1.95064181e-153, 6.41842734e-310]]]])



Fp = np.zeros((nat, nat))
for i in range(nat):
        for j in range(nat):
            Fp[i, j] = np.linalg.norm(np.squeeze(Fp2[:, i, :, j]))

for i in range(nat):
        Fp[i, i] = 0




def test_score():
    fcdimlist, dimensionality1, dimensionality2 = scanner(nat, Fp, sc, [3.0])
    scores = calc_score({'1.0': '0D', '3.0': '0D'}, 100)

    assert dimensionality1 == '0D'
    assert scores == {'0D': 0.02}
